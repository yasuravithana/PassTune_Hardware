CCS PCH C Compiler, Version 4.114, 93460303               04-Apr-12 16:34

               Filename: e:\sem 3\en\tronic project\c src\test\test.lst

               ROM used: 140 bytes (0%)
                         Largest free fragment is 32628
               RAM used: 5 (0%) at main() level
                         6 (0%) worst case
               Stack:    1 locations

*
0000:  GOTO   002A
.................... #include <test.h> 
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOOSCSEN              	//Oscillator switching is disabled, main oscillator is source 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
....................  
.................... #use delay(clock=20000000) 
0004:  CLRF   FEA
0006:  MOVLW  06
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  06
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  7B
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETLW  00
....................  
....................  
....................  
....................  
.................... void main() 
.................... { 
002A:  CLRF   FF8
002C:  BCF    FD0.7
002E:  CLRF   FEA
0030:  CLRF   FE9
0032:  BSF    FC1.0
0034:  BSF    FC1.1
0036:  BSF    FC1.2
0038:  BCF    FC1.3
....................  
.................... while (true) 
.................... { 
....................    output_A(0xff); 
003A:  CLRF   F92
003C:  MOVLW  FF
003E:  MOVWF  F89
....................    output_B(0xff); 
0040:  CLRF   F93
0042:  MOVWF  F8A
....................    output_C(0xff); 
0044:  CLRF   F94
0046:  MOVWF  F8B
....................    output_D(0xff); 
0048:  CLRF   F95
004A:  MOVWF  F8C
....................    output_E(0xff);/* 
004C:  BCF    F96.0
004E:  BCF    F96.1
0050:  BCF    F96.2
0052:  MOVWF  F8D
....................    output_high(pin_C1); 
....................    output_high(pin_C0); 
....................    output_high(pin_A4);*/ 
....................    Delay_ms(1000); 
0054:  MOVLW  04
0056:  MOVWF  05
0058:  MOVLW  FA
005A:  MOVWF  06
005C:  RCALL  0004
005E:  DECFSZ 05,F
0060:  BRA    0058
....................    output_A(0x0); 
0062:  CLRF   F92
0064:  CLRF   F89
....................    output_B(0x0); 
0066:  CLRF   F93
0068:  CLRF   F8A
....................    output_C(0x0); 
006A:  CLRF   F94
006C:  CLRF   F8B
....................    output_D(0x0); 
006E:  CLRF   F95
0070:  CLRF   F8C
....................    output_E(0x0);/* 
0072:  BCF    F96.0
0074:  BCF    F96.1
0076:  BCF    F96.2
0078:  CLRF   F8D
....................    output_low(pin_C1); 
....................    output_low(pin_C0); 
....................    output_low(pin_A4);*/ 
....................    Delay_ms(1000); 
007A:  MOVLW  04
007C:  MOVWF  05
007E:  MOVLW  FA
0080:  MOVWF  06
0082:  RCALL  0004
0084:  DECFSZ 05,F
0086:  BRA    007E
.................... } 
0088:  BRA    003A
....................  
.................... } 
008A:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
