CCS PCH C Compiler, Version 4.114, 93460303               04-Apr-12 18:04

               Filename: E:\sem 3\EN\tronic project\c src\test\test mode selection.lst

               ROM used: 440 bytes (1%)
                         Largest free fragment is 32324
               RAM used: 45 (3%) at main() level
                         47 (3%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   0152
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.1
0056:  GOTO   0060
005A:  BTFSC  F9E.1
005C:  GOTO   00D2
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   010E
006C:  BTFSS  FF0.3
006E:  GOTO   0078
0072:  BTFSC  FF0.0
0074:  GOTO   012C
0078:  BTFSS  FF0.4
007A:  GOTO   0084
007E:  BTFSC  FF0.1
0080:  GOTO   014A
0084:  MOVFF  0E,00
0088:  MOVFF  0F,01
008C:  MOVFF  10,02
0090:  MOVFF  11,03
0094:  MOVFF  0C,FE9
0098:  MOVFF  07,FEA
009C:  BSF    07.7
009E:  MOVFF  08,FE1
00A2:  MOVFF  09,FE2
00A6:  MOVFF  0A,FD9
00AA:  MOVFF  0B,FDA
00AE:  MOVFF  12,FF3
00B2:  MOVFF  13,FF4
00B6:  MOVFF  14,FFA
00BA:  MOVFF  15,FF5
00BE:  MOVFF  16,FF6
00C2:  MOVFF  17,FF7
00C6:  MOVF   04,W
00C8:  MOVFF  06,FE0
00CC:  MOVFF  05,FD8
00D0:  RETFIE 0
.................... #include <test timer.h> 
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOOSCSEN              	//Oscillator switching is disabled, main oscillator is source 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
....................  
.................... #use delay(clock=20000000) 
*
00E8:  CLRF   FEA
00EA:  MOVLW  2E
00EC:  MOVWF  FE9
00EE:  MOVF   FEF,W
00F0:  BZ    010C
00F2:  MOVLW  06
00F4:  MOVWF  01
00F6:  CLRF   00
00F8:  DECFSZ 00,F
00FA:  BRA    00F8
00FC:  DECFSZ 01,F
00FE:  BRA    00F6
0100:  MOVLW  7B
0102:  MOVWF  00
0104:  DECFSZ 00,F
0106:  BRA    0104
0108:  DECFSZ FEF,F
010A:  BRA    00F2
010C:  RETLW  00
....................  
....................  
....................  
.................... int32 readInt(void); 
.................... void writeInt(void); 
.................... void store(void); 
....................  
....................  
.................... int32  t=0; 
.................... int count,hit; 
.................... int16 ramStart=0x50; 
.................... int32 *ramNow; 
....................  
.................... // Variable declarations for functions (mainly for EEPROM write/read functions) 
.................... int32 value; 
.................... int8 i,j; 
.................... byte addressEEPROM; 
.................... byte* addressRAM; 
....................  
....................  
.................... #int_TIMER2 
.................... void  TIMER2_isr(void)  
.................... { 
.................... t++; 
*
00D2:  MOVLW  01
00D4:  ADDWF  1A,F
00D6:  BTFSC  FD8.0
00D8:  INCF   1B,F
00DA:  BTFSC  FD8.2
00DC:  INCF   1C,F
00DE:  BTFSC  FD8.2
00E0:  INCF   1D,F
.................... } 
....................  
00E2:  BCF    F9E.1
00E4:  GOTO   0084
.................... #int_EXT 
.................... void  EXT_isr(void)  
.................... { 
.................... while (true) 
.................... { 
.................... clear_interrupt(INT_EXT); 
*
010E:  BCF    FF2.1
....................    output_high(pin_D2); 
0110:  BCF    F95.2
0112:  BSF    F8C.2
....................    delay_ms(10); 
0114:  MOVLW  0A
0116:  MOVWF  2E
0118:  RCALL  00E8
....................    output_low(pin_D2); 
011A:  BCF    F95.2
011C:  BCF    F8C.2
....................    delay_ms(10); 
011E:  MOVLW  0A
0120:  MOVWF  2E
0122:  RCALL  00E8
.................... } 
0124:  BRA    010E
.................... } 
....................  
0126:  BCF    FF2.1
0128:  GOTO   0084
.................... #int_EXT1 
.................... void  EXT1_isr(void)  
.................... { 
.................... while (true) 
.................... { 
.................... clear_interrupt(INT_EXT1); 
012C:  BCF    FF0.0
....................    output_high(pin_D3); 
012E:  BCF    F95.3
0130:  BSF    F8C.3
....................    delay_ms(10); 
0132:  MOVLW  0A
0134:  MOVWF  2E
0136:  RCALL  00E8
....................    output_low(pin_D3); 
0138:  BCF    F95.3
013A:  BCF    F8C.3
....................    delay_ms(10); 
013C:  MOVLW  0A
013E:  MOVWF  2E
0140:  RCALL  00E8
.................... } 
0142:  BRA    012C
.................... } 
....................  
0144:  BCF    FF0.0
0146:  GOTO   0084
.................... #int_EXT2 
.................... void  EXT2_isr(void)  
.................... { 
.................... reset_cpu(); 
014A:  RESET
.................... } 
....................  
....................  
....................  
014C:  BCF    FF0.1
014E:  GOTO   0084
.................... void main() 
.................... { 
0152:  CLRF   FF8
0154:  BCF    FD0.7
0156:  BSF    07.7
0158:  CLRF   FEA
015A:  CLRF   FE9
015C:  CLRF   1D
015E:  CLRF   1C
0160:  CLRF   1B
0162:  CLRF   1A
0164:  CLRF   21
0166:  MOVLW  50
0168:  MOVWF  20
016A:  BSF    FC1.0
016C:  BSF    FC1.1
016E:  BSF    FC1.2
0170:  BCF    FC1.3
....................  
.................... set_tris_D(0); 
0172:  MOVLW  00
0174:  MOVWF  F95
....................  
.................... setup_timer_2(T2_DIV_BY_1,249,16);      //50.0 us overflow, 800 us interrupt 
0176:  MOVLW  78
0178:  IORLW  04
017A:  MOVWF  FCA
017C:  MOVLW  F9
017E:  MOVWF  FCB
....................   // setup_timer_3(T3_DISABLED|T3_DIV_BY_1); 
....................    enable_interrupts(INT_TIMER2); 
0180:  BSF    F9D.1
....................    enable_interrupts(INT_EXT); 
0182:  BSF    FF2.4
....................    enable_interrupts(INT_EXT1); 
0184:  BSF    FF0.3
....................    enable_interrupts(INT_EXT2); 
0186:  BSF    FF0.4
....................    enable_interrupts(GLOBAL); 
0188:  MOVLW  C0
018A:  IORWF  FF2,F
....................     
....................    while(true) 
....................    { 
....................    output_high(pin_D3); 
018C:  BCF    F95.3
018E:  BSF    F8C.3
0190:  CLRF   19
0192:  BTFSC  FF2.7
0194:  BSF    19.7
0196:  BCF    FF2.7
....................    delay_ms(10); 
0198:  MOVLW  0A
019A:  MOVWF  2E
019C:  RCALL  00E8
019E:  BTFSC  19.7
01A0:  BSF    FF2.7
....................    output_low(pin_D3); 
01A2:  BCF    F95.3
01A4:  BCF    F8C.3
01A6:  CLRF   19
01A8:  BTFSC  FF2.7
01AA:  BSF    19.7
01AC:  BCF    FF2.7
....................    delay_ms(10); 
01AE:  MOVLW  0A
01B0:  MOVWF  2E
01B2:  RCALL  00E8
01B4:  BTFSC  19.7
01B6:  BSF    FF2.7
....................    } 
01B8:  BRA    018C
.................... } 
01BA:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
